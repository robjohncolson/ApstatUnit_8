{
  "fileName": "index.html",
  "description": "A single-page web application designed as a study aid for AP Statistics Unit 8 (Chi-Square Tests). It provides a learning workflow, a flowchart, a dedicated interface for interacting with an AI tutor (Grok) using provided materials, and a section to browse and track progress through study materials.",
  "technologies": [
    "HTML",
    "Tailwind CSS (via CDN)",
    "JavaScript (Vanilla)",
    "React (via CDN)",
    "ReactDOM (via CDN)",
    "Babel (standalone, for JSX)",
    "Mermaid JS (via CDN, for flowchart rendering)"
  ],
  "structure": {
    "root": "html",
    "head": {
      "description": "Contains metadata, links to external libraries (Tailwind, React, Babel, Mermaid), and inline CSS for tab styling.",
      "elements": [
        "meta (charset, viewport)",
        "title",
        "script (tailwind)",
        "script (react, react-dom)",
        "script (babel)",
        "script (mermaid)",
        "style (inline CSS for .tab-content, .tab-button, .active)"
      ]
    },
    "body": {
      "class": "bg-gray-100 min-h-screen",
      "children": [
        {
          "id": "mainContainer",
          "tag": "div",
          "class": "container mx-auto px-4 py-8",
          "children": [
            {
              "id": "header",
              "tag": "header",
              "class": "text-center mb-8",
              "description": "Displays the page title, subtitle, and AP exam weight badge."
            },
            {
              "id": "tabNavigation",
              "tag": "div",
              "class": "flex mb-0 border-b border-gray-200",
              "description": "Contains clickable div elements acting as tab buttons.",
              "tabs": [
                {"id": "tab-learning-flow", "text": "Learning Flow"},
                {"id": "tab-flowchart", "text": "Flowchart"},
                {"id": "tab-grok-prompt", "text": "Grok Prompt"},
                {"id": "tab-study-materials", "text": "Study Materials"}
              ]
            },
            {
              "id": "tabContentContainer",
              "tag": "div",
              "class": "bg-white rounded-b-lg shadow-md p-6",
              "description": "Holds the content for each tab. Visibility is controlled by the 'active' class.",
              "tabsContent": [
                {"id": "content-learning-flow"},
                {"id": "content-flowchart"},
                {"id": "content-grok-prompt"},
                {"id": "content-study-materials"}
              ]
            }
          ]
        },
        {
          "id": "scripts",
          "tag": "script",
          "description": "Contains primary JavaScript logic for interactivity, data management, and rendering.",
          "sections": [
            "Mermaid Definition & Rendering",
            "Grok Prompt Definition",
            "Topic Data (`pdfFiles` array)",
            "Topic Card Generation (`createTopicCard`)",
            "Progress Management Functions (`checkAllTopicsCompleted`, `resetProgress`, `markTopicAsCompleted`, etc.)",
            "LocalStorage Interaction (`saveTopicProgress`, `loadTopicProgress`)",
            "DOM Manipulation & Event Listeners (`DOMContentLoaded`, tab switching, copy button)",
            "Grok Prompt Tab Update Functions (`updateCurrentTopicInfo`, `populateQuickAccessTopics`)",
            "Global Function Exposure (`window.markTopicAsCompleted`)"
          ]
        },
        {
          "id": "reactComponentScript",
          "tag": "script",
          "attributes": {"type": "text/babel"},
          "description": "Defines the `APStatLearningFlow` React component using JSX, rendered into `#learning-flow-app`."
        }
      ]
    }
  },
  "components": {
    "tabbedInterface": {
      "triggerElements": ".tab-button (divs)",
      "targetElements": ".tab-content (divs)",
      "mechanism": "Click event listeners toggle 'active' class on buttons and content divs. Managed by vanilla JS.",
      "initialState": "'Learning Flow' tab is active by default."
    },
    "learningFlow": {
      "containerId": "content-learning-flow",
      "reactRootId": "learning-flow-app",
      "componentName": "APStatLearningFlow",
      "description": "A React component displaying a step-by-step guide for using the study resources. Uses React state (`useState`) to manage the current step.",
      "features": [
        "Step-by-step progress tracker with icons.",
        "Content display for the current step.",
        "Pro tips section.",
        "Static materials list.",
        "Previous/Next navigation buttons."
      ]
    },
    "flowchart": {
      "containerId": "content-flowchart",
      "mermaidContainerId": "flowchart",
      "definitionSource": "JavaScript variable `flowchartDefinition`",
      "renderingEngine": "Mermaid JS",
      "description": "Displays a Mermaid flowchart visualizing the recommended learning process. Rendered/re-rendered when the tab becomes active.",
      "features": ["Visual process flow", "Color-coded legend"]
    },
    "grokPrompt": {
      "containerId": "content-grok-prompt",
      "layout": "Two-column grid (md breakpoint)",
      "leftColumn": {
        "elements": [
          {"id": "grok-prompt", "tag": "pre", "description": "Displays the predefined prompt for the Grok AI tutor (populated by JS)."},
          {"id": "copy-button", "tag": "button", "description": "Copies the prompt text to the clipboard using Clipboard API (with fallback). Shows feedback."},
          {"id": "open-grok-link", "tag": "a", "description": "Links to grok.com."},
          {"id": "learning-guide", "tag": "ol", "description": "Numbered list instructing how to use Grok with PDFs."},
          {"id": "help-video-link", "tag": "a", "description": "Link to a tutorial video (currently a placeholder/joke link)."}
        ]
      },
      "rightColumn": {
        "elements": [
          {
            "id": "current-topic-box",
            "children": [
              {"id": "current-topic-header", "tag": "h3", "description": "Dynamically updated header."},
              {"id": "current-topic-info", "tag": "div", "description": "Dynamically populated by `updateCurrentTopicInfo` JS function. Shows details, PDF download links, and video links for the currently selected/active topic. Handles 'all completed' state."},
              {"id": "complete-current-topic-btn", "tag": "button", "description": "Marks the current topic as complete via `markTopicAsCompleted`. Changes appearance/functionality (disabled if complete, becomes 'Reset Progress' if all topics are done)."}
            ]
          },
          {
            "id": "quick-access-box",
             "children": [
               {"class": "grok-prompt-topics-header", "tag": "h3", "description": "Dynamically updated header."},
              {"id": "quick-access-topics", "tag": "div", "description": "Dynamically populated by `populateQuickAccessTopics` JS function with small clickable cards for each topic, showing status and links. Clicking sets a topic as current."}
             ]
          }
        ]
      },
       "infoText": "Note about (+) symbol indicating Google Drive backup videos."
    },
    "studyMaterials": {
      "containerId": "content-study-materials",
      "features": [
        {"description": "Grok Prompt CTA Banner linking to the Grok Prompt tab."},
        {"id": "topic-select", "tag": "select", "description": "Dropdown populated with topics; selecting scrolls to the corresponding topic card."},
        {"id": "progress-bar", "tag": "div", "description": "Visually represents completion percentage, updated by `updateProgressBar`."},
        {"id": "all-completed-container", "tag": "div", "description": "Initially hidden message shown when all topics are completed. Contains `reset-progress-btn`."},
        {"id": "topic-cards-container", "tag": "div", "description": "Main area where topic cards are dynamically rendered by `populateTopicCards` using `createTopicCard` function."},
        {"id": "next-topic-container", "tag": "div", "description": "Initially hidden section displaying the next incomplete topic, updated by `updateNextTopic`."}
      ],
      "topicCardStructure": {
        "generatedBy": "`createTopicCard` function",
        "content": [
          "Topic name and status icon/badge (Current, Completed, Upcoming, Capstone)",
          "Description",
          "Links to Question/Answer PDFs (conditional)",
          "Links to AP Classroom Videos (conditional, up to 3)",
          "Links to Google Drive Backup Videos (conditional, indicated by (+), shown via tooltip/hover)",
          "'Mark as Completed' button (conditional, calls `markTopicAsCompleted`)"
        ],
        "styling": "Varies based on completion status, current status, and capstone status (using Tailwind classes)."
      },
      "infoText": "Note about (+) symbol indicating Google Drive backup videos."
    }
  },
  "dynamicContent": {
    "topicData": {
      "source": "JavaScript array `pdfFiles`",
      "structure": "Array of objects, each representing a topic with `id`, `name`, `description`, `questionPdf`, `answersPdf`, `questionPdf2`, `questionPdf3`, `videoUrl`, `videoUrl2`, `videoUrl3`, `altVideoUrl`, `altVideoUrl2`, `altVideoUrl3`, `completed` (boolean), `current` (boolean), `isCapstone` (boolean)."
    },
    "topicRendering": {
      "function": "`createTopicCard`",
      "targets": [
        "#topic-cards-container (Study Materials)",
        "#current-topic-info (Grok Prompt)",
        "#quick-access-topics (Grok Prompt)",
        "#next-topic-card (Study Materials)"
      ],
      "logic": "Generates HTML based on `pdfFiles` data and topic status (completed, current, capstone)."
    },
    "flowchartRendering": {
      "library": "Mermaid JS",
      "source": "`flowchartDefinition` string",
      "target": "#flowchart",
      "trigger": "Tab activation or initial load if tab is active."
    },
    "reactRendering": {
      "library": "React/ReactDOM",
      "source": "`APStatLearningFlow` component (JSX)",
      "target": "#learning-flow-app"
    },
    "grokPromptText": {
      "source": "`grokPrompt` string",
      "target": "#grok-prompt"
    },
    "progressUpdates": {
      "elements": ["#progress-bar", ".topic-card styling", "#all-completed-container visibility", "#next-topic-container visibility", "#complete-current-topic-btn state"],
      "trigger": "`markTopicAsCompleted`, `resetProgress`, `loadTopicProgress`"
    }
  },
  "functionality": {
    "tabSwitching": "Clicking tab buttons updates 'active' classes to show/hide content.",
    "progressTracking": {
      "persistence": "Uses `localStorage` (key: 'apStatsTopicProgress') to store completion and current status.",
      "markingComplete": "`markTopicAsCompleted` function updates `pdfFiles` array, saves to localStorage, and refreshes UI elements across relevant tabs.",
      "resetting": "`resetProgress` function clears completion status in `pdfFiles`, saves, and refreshes UI.",
      "visualFeedback": "Progress bar, topic card styling, 'All Completed' message, 'Next Topic' section.",
      "topicSelection": "`#topic-select` dropdown scrolls to the selected topic card in Study Materials."
    },
    "grokInteraction": {
      "prompt": "Predefined prompt provided for copying.",
      "copy": "`#copy-button` copies the prompt text.",
      "materials": "Links provided to download relevant PDFs for the current/selected topic.",
      "guidance": "Instructions provided on how to use Grok with the materials."
    },
    "currentTopicFocus": {
      "determination": "Based on the first incomplete topic or user selection in the Grok Prompt tab's Quick Access.",
      "indication": "Highlighted/styled cards in Study Materials and Grok Prompt tabs; dedicated display in `#current-topic-info`."
    },
    "videoAccess": "Provides links to AP Classroom videos and Google Drive backups (indicated by (+)).",
    "completionHandling": "Displays a congratulatory message and potentially alters UI (e.g., reset button) when all topics are marked complete."
  },
  "localStorage": {
    "key": "apStatsTopicProgress",
    "purpose": "Stores an array of topic objects containing `id`, `completed` status, and `current` status to persist user progress between sessions."
  }
}